scope ProbeContractAbility initializer i
	import RegisterPlayerUnitEvent
	import SimError
	import Ships
	import Equipment
	import Game

	globals
		constant integer PROBE_ID='A00J'
		constant integer ROCK_FORMATION_ID = 'u001'
		constant string ERROR_MESSAGE = "This probe can only be used on unusual rock formations."
		constant string ALREADY_MESSAGE = "You already have data on this rock formation."
		constant string SUCCESS_MESSAGE = "You received |cffffcc00Rock Data|r; return it to the utility port for your reward."
	endglobals

	function effectC takes nothing returns nothing
		unit tU
		player owner
		if GetSpellAbilityId()==PROBE_ID then
			tU=GetTriggerUnit()
			owner = GetOwningPlayer(tU)
			if GetUnitTypeId(GetSpellTargetUnit())!=ROCK_FORMATION_ID then
				simError(owner, ERROR_MESSAGE)
			elseif Ships.hasItemOfType(tU, Equipment.DATA_ID) then
				simError(owner, ALREADY_MESSAGE)
			else
				UnitAddItem(tU, CreateItem(Equipment.DATA_ID, GetUnitX(tU), GetUnitY(tU)))
				DisplayTextToPlayer(owner, 0., 0., SUCCESS_MESSAGE)
				Sound.playForPlayer(Game.TRADE_SUCCESS_SOUND, 1., owner)
			end
		end
	end

	function i takes nothing returns nothing
		registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT, function effectC)
	end
endscope
