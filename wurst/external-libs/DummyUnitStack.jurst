package DummyUnitStack
	public class DummyUnitStack
		static constant integer DUMMY_UNIT_ID= 'u000'
		static constant integer MIN_PRELOAD_BLOCK_SIZE= 10 //How many units to preload when the preloading algorithm turns on, at a minimum?

		static constant integer PRELOAD_INIT_COUNT= 200 //How many units to preload during initialization
		static constant boolean DO_PIC= true

		static constant integer DYNAMIC_DEFERRED_PRELOAD_COUNT= 20 //How many units should DummyUnitStack keep preloaded at a minimum?
		static constant boolean DO_DDPC= true

		static constant integer INITIAL_DEFERRED_PRELOAD_COUNT= 20 //How many units should be queued on the preloader on map start?
		static constant boolean DO_IDPC= true

		static constant integer MAX_PRELOADED_UNITS= 5000
		static constant boolean DO_MPU= true

		static constant real SAFE_LOC_X= -3820.
		static constant real SAFE_LOC_Y= 3700.
		static constant real CLOCK_PERIOD= 1./60.
		static unit array dummyStack
		static integer stackIndex= -1
		static integer deferredTodoCount= 0
		static timer clock= CreateTimer()

		static method add takes boolean preloading returns unit
			unit u= CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), DummyUnitStack.DUMMY_UNIT_ID, DummyUnitStack.SAFE_LOC_X, DummyUnitStack.SAFE_LOC_Y, 0.)
			UnitAddAbility(u, 'Aloc')
			UnitAddAbility(u, 'Arav')
			if preloading then
				DummyUnitStack.stackIndex= DummyUnitStack.stackIndex+1
				DummyUnitStack.dummyStack[DummyUnitStack.stackIndex]= u
			else
				return u
			end
			return null
		endmethod

		static method deferredPreloader takes nothing returns nothing
			DummyUnitStack.deferredTodoCount= DummyUnitStack.deferredTodoCount-1
			DummyUnitStack.add(true)
			if DummyUnitStack.deferredTodoCount<1 then
				PauseTimer(DummyUnitStack.clock)
			end
		endmethod

		static method get takes nothing returns unit
			unit result
			if DummyUnitStack.stackIndex!= -1 then
				DummyUnitStack.stackIndex= DummyUnitStack.stackIndex-1
				result= DummyUnitStack.dummyStack[DummyUnitStack.stackIndex+1]
			else
				result= DummyUnitStack.add(false)
			end
			static if DO_DDPC then
				if DummyUnitStack.stackIndex<(DummyUnitStack.DYNAMIC_DEFERRED_PRELOAD_COUNT-1) and DummyUnitStack.deferredTodoCount<1 then
					DummyUnitStack.deferredTodoCount= DummyUnitStack.MIN_PRELOAD_BLOCK_SIZE
					TimerStart(DummyUnitStack.clock, DummyUnitStack.CLOCK_PERIOD, true, function DummyUnitStack.deferredPreloader)
				end
			end
			return result
		endmethod

		static method release takes unit u returns nothing
			static if DO_MPU then
				if DummyUnitStack.stackIndex>= DummyUnitStack.MAX_PRELOADED_UNITS then
					RemoveUnit(u)
					return
				end
			end
			SetUnitFlyHeight(u, 0., 0.)
			SetUnitScale(u, 1., 1., 1.)
			SetUnitOwner(u, Player(PLAYER_NEUTRAL_PASSIVE), true)
			SetUnitX(u, DummyUnitStack.SAFE_LOC_X)
			SetUnitY(u, DummyUnitStack.SAFE_LOC_Y)
			DummyUnitStack.stackIndex= DummyUnitStack.stackIndex+1
			DummyUnitStack.dummyStack[DummyUnitStack.stackIndex]= u
		endmethod
	end

	init
		integer index= 1

		if DummyUnitStack.DO_PIC then
			loop
				exitwhen index>DummyUnitStack.PRELOAD_INIT_COUNT
				DummyUnitStack.add(true)
				index= index+1
			end
		end

		if DummyUnitStack.DO_IDPC then
			DummyUnitStack.deferredTodoCount= DummyUnitStack.INITIAL_DEFERRED_PRELOAD_COUNT
			TimerStart(DummyUnitStack.clock, DummyUnitStack.CLOCK_PERIOD, true, function DummyUnitStack.deferredPreloader)
		end
	end