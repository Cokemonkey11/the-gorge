package DummyUnitStack
	public class DummyUnitStack
		static constant DUMMY_UNIT_ID = 'u000'
		static constant MIN_PRELOAD_BLOCK_SIZE = 10 //How many units to preload when the preloading algorithm turns on, at a minimum?

		static constant PRELOAD_INIT_COUNT = 200 //How many units to preload during initialization
		static constant DO_PIC = true

		static constant DYNAMIC_DEFERRED_PRELOAD_COUNT = 20 //How many units should DummyUnitStack keep preloaded at a minimum?
		static constant DO_DDPC = true

		static constant INITIAL_DEFERRED_PRELOAD_COUNT = 20 //How many units should be queued on the preloader on map start?
		static constant DO_IDPC = true

		static constant MAX_PRELOADED_UNITS = 5000
		static constant DO_MPU = true

		static constant SAFE_LOC_X = -3820.
		static constant SAFE_LOC_Y = 3700.
		static constant CLOCK_PERIOD = 1./60.
		static unit array dummyStack
		static int stackIndex = -1
		static int deferredTodoCount = 0
		static timer clock = CreateTimer()

		static method add takes bool preloading returns unit
			unit u = CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), DummyUnitStack.DUMMY_UNIT_ID, DummyUnitStack.SAFE_LOC_X, DummyUnitStack.SAFE_LOC_Y, 0.)
			UnitAddAbility(u, 'Aloc')
			UnitAddAbility(u, 'Arav')

			if preloading then
				DummyUnitStack.stackIndex++
				DummyUnitStack.dummyStack[DummyUnitStack.stackIndex] = u
			else
				return u
			end

			return null
		end

		static method deferredPreloader takes nothing returns nothing
			DummyUnitStack.deferredTodoCount--
			DummyUnitStack.add(true)

			if DummyUnitStack.deferredTodoCount < 1 then
				PauseTimer(DummyUnitStack.clock)
			end
		end

		static method get takes nothing returns unit
			unit result

			if DummyUnitStack.stackIndex != -1 then
				DummyUnitStack.stackIndex--
				result = DummyUnitStack.dummyStack[DummyUnitStack.stackIndex + 1]
			else
				result = DummyUnitStack.add(false)
			end

			static if DO_DDPC then
				if DummyUnitStack.stackIndex < (DummyUnitStack.DYNAMIC_DEFERRED_PRELOAD_COUNT - 1) and DummyUnitStack.deferredTodoCount < 1 then
					DummyUnitStack.deferredTodoCount = DummyUnitStack.MIN_PRELOAD_BLOCK_SIZE
					TimerStart(DummyUnitStack.clock, DummyUnitStack.CLOCK_PERIOD, true, function DummyUnitStack.deferredPreloader)
				end
			end
			return result
		end

		static method release takes unit u returns nothing
			static if DO_MPU then
				if DummyUnitStack.stackIndex >= DummyUnitStack.MAX_PRELOADED_UNITS then
					RemoveUnit(u)
					return
				end
			end
			SetUnitFlyHeight(u, 0., 0.)
			SetUnitScale(u, 1., 1., 1.)
			SetUnitOwner(u, Player(PLAYER_NEUTRAL_PASSIVE), true)
			SetUnitX(u, DummyUnitStack.SAFE_LOC_X)
			SetUnitY(u, DummyUnitStack.SAFE_LOC_Y)
			DummyUnitStack.stackIndex++
			DummyUnitStack.dummyStack[DummyUnitStack.stackIndex] = u
		end
	end

	init
		int index = 1

		if DummyUnitStack.DO_PIC then
			loop
				exitwhen index > DummyUnitStack.PRELOAD_INIT_COUNT
				DummyUnitStack.add(true)
				index++
			end
		end

		if DummyUnitStack.DO_IDPC then
			DummyUnitStack.deferredTodoCount = DummyUnitStack.INITIAL_DEFERRED_PRELOAD_COUNT
			TimerStart(DummyUnitStack.clock, DummyUnitStack.CLOCK_PERIOD, true, function DummyUnitStack.deferredPreloader)
		end
	end
