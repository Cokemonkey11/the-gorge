package MyBoard
	globals
		bool             DEBUG_MODE           = false

		constant int    MAX_ROW_COUNT        = 100
		constant int    MAX_COLUMN_COUNT     = 30
		constant int    MAX_ARRAY_SIZE       = MAX_ROW_COUNT*MAX_COLUMN_COUNT
		constant real       AVERAGE_LETTER_WIDTH = .01484375
	end

	public class MyBoard
		multiboard                    board        = null
		private  int              colCount     = 0
		private  int              rowCount     = 0
		private  bool              isMinimized  = false
		private  bool              isShown      = false
		private  string               titleText    = ""
		private  int        array charCnt [MAX_ARRAY_SIZE]
		private  real           array width   [MAX_ARRAY_SIZE]
		private  bool        array showVal [MAX_ARRAY_SIZE]
		private  bool        array showIcon[MAX_ARRAY_SIZE]
		private  string         array curIcon [MAX_ARRAY_SIZE]
		private  string         array curValue[MAX_ARRAY_SIZE]
		private  multiboarditem array brdItem [MAX_ARRAY_SIZE]

		// Getting the correct values from arrays.

		method getCharCount takes int col, int row returns int
			return this.charCnt[MAX_COLUMN_COUNT*col + row]
		end

		method getWidth takes int col, int row returns real
			return this.width[MAX_COLUMN_COUNT*col + row]
		end

		method getIconPath takes int col, int row returns string
			return this.curIcon[MAX_COLUMN_COUNT*col + row]
		end

		method getValue takes int col, int row returns string
			return this.curValue[MAX_COLUMN_COUNT*col + row]
		end

		method getItem takes int col, int row returns multiboarditem
			return this.brdItem[MAX_COLUMN_COUNT*col + row]
		end

		method isValueShown takes int col, int row returns bool
			return showVal[MAX_COLUMN_COUNT*col + row]
		end

		method isIconShown takes int col, int row returns bool
			return showIcon[MAX_COLUMN_COUNT*col + row]
		end

		// Local parameter changes.
		method displayLocalIcon takes player whichPlayer, int col, int row, bool doDisplay returns nothing
			int arrIndex = MAX_COLUMN_COUNT*col + row

			if GetLocalPlayer() == whichPlayer then
				this.showIcon[arrIndex] = doDisplay
			end

			MultiboardSetItemStyle(this.brdItem[arrIndex], this.showVal[arrIndex], this.showIcon[arrIndex])
		end

		method displayLocalValue takes player whichPlayer, int col, int row, bool doDisplay returns nothing
			int arrIndex = MAX_COLUMN_COUNT*col + row

			if GetLocalPlayer() == whichPlayer then
				this.showVal[arrIndex] = doDisplay
			end

			MultiboardSetItemStyle(this.brdItem[arrIndex], this.showVal[arrIndex], .showIcon[arrIndex])
		end

		method setLocalIcon takes player whichPlayer, int col, int row, string newIcon returns nothing
			int arrIndex = MAX_COLUMN_COUNT*col + row

			if GetLocalPlayer() == whichPlayer then
				this.curIcon[arrIndex] = newIcon
			end

			MultiboardSetItemIcon(this.brdItem[arrIndex], this.curIcon[arrIndex])
		end

		method setLocalValue takes player whichPlayer, int col, int row, string newValue returns nothing
			int arrIndex = MAX_COLUMN_COUNT*col + row

			if GetLocalPlayer() == whichPlayer then
				this.curValue[arrIndex] = newValue
			end

			MultiboardSetItemValue(this.brdItem[arrIndex], this.curValue[arrIndex])
		end

		method setLocalWidth takes player whichPlayer, int col, int row, real width returns nothing
			int arrIndex = MAX_COLUMN_COUNT*col + row

			if GetLocalPlayer() == whichPlayer then
				this.width[arrIndex] = width
				this.charCnt[arrIndex] = R2I(width/AVERAGE_LETTER_WIDTH)
			end

			MultiboardSetItemWidth(this.brdItem[arrIndex], this.width[arrIndex])
		end

		method setLocalTitleText takes player whichPlayer, string newTitle returns nothing
			if GetLocalPlayer() == whichPlayer then
				this.titleText = newTitle
			end

			MultiboardSetTitleText(.board, this.titleText)
		end

		// Global parameter changes.

		method displayIcon takes int col, int row, bool doDisplay returns nothing
			this.displayLocalIcon(GetLocalPlayer(), col, row, doDisplay)
		end

		method displayValue takes int col, int row, bool doDisplay returns nothing
			this.displayLocalValue(GetLocalPlayer(), col, row, doDisplay)
		end

		method setIcon takes int col, int row, string newIcon returns nothing
			this.setLocalIcon(GetLocalPlayer(), col, row, newIcon)
		end

		method setValue takes int col, int row, string newValue returns nothing
			this.setLocalValue(GetLocalPlayer(), col, row, newValue)
		end

		method setWidth takes int col, int row, real width returns nothing
			this.setLocalWidth(GetLocalPlayer(), col, row, width)
		end

		// General stuff.

		method minimize takes bool doMinimize returns nothing
			if this.isShown then
				MultiboardMinimize(.board, doMinimize)
			end
			this.isMinimized = doMinimize
		end

		method display takes bool doDisplay returns nothing
			this.isShown = doDisplay
			MultiboardDisplay(.board, doDisplay)
			if doDisplay then
				// Unbug the minimization - known issue.
				this.minimize(not this.isMinimized)
				this.minimize(not this.isMinimized)
				this.minimize(not this.isMinimized)
				this.minimize(not this.isMinimized)
			end
		end

		method setRowCount takes int rows returns nothing
			int colLoop
			int rowLoop
			int arrIndex
			// No actions if it's same.
			if rows != this.rowCount then
				// Here's the anti-lag snippet: remove unneeded multiboard items from memory.
				// (or add new!)
				if rows < this.rowCount then
					rowLoop = rows
					loop
						exitwhen rowLoop > this.rowCount
						colLoop = 0
						loop
							exitwhen colLoop > this.colCount
							arrIndex = MAX_COLUMN_COUNT*colLoop + rowLoop
							MultiboardReleaseItem(this.brdItem[arrIndex])
							this.brdItem[arrIndex] = null
							colLoop = colLoop + 1
						end
						rowLoop = rowLoop + 1
					end
				else
					rowLoop = this.rowCount
					loop
						exitwhen rowLoop > rows
						colLoop = 0
						loop
							exitwhen colLoop > this.colCount
							arrIndex = MAX_COLUMN_COUNT*colLoop + rowLoop
							brdItem [arrIndex] = MultiboardGetItem(.board, rowLoop, colLoop)
							width   [arrIndex] = .01
							showVal [arrIndex] = true
							showIcon[arrIndex] = true
							curValue[arrIndex] = ""
							curIcon [arrIndex] = ""
							colLoop = colLoop + 1
						end
						rowLoop = rowLoop + 1
					end
				end

				this.rowCount = rows
				MultiboardSetRowCount(.board, this.rowCount)
			end
		end

		method setColCount takes int cols returns nothing
			int colLoop
			int rowLoop
			int arrIndex

			// No actions if it's same.
			if cols != this.colCount then
				// Here's the anti-lag snippet: remove unneeded multiboard items from memory.
				// (or add new!)
				if cols < this.colCount then
					colLoop = cols
					loop
						exitwhen colLoop > this.colCount
						rowLoop = 0
						loop
							exitwhen rowLoop > this.rowCount
							arrIndex = MAX_COLUMN_COUNT*colLoop + rowLoop
							MultiboardReleaseItem(this.brdItem[arrIndex])
							this.brdItem[arrIndex] = null
							rowLoop = rowLoop + 1
						end
						colLoop = colLoop + 1
					end
				else
					colLoop = this.colCount
					loop
						exitwhen colLoop > cols
						rowLoop = 0
						loop
							exitwhen rowLoop > this.rowCount
							arrIndex = MAX_COLUMN_COUNT*colLoop + rowLoop
							brdItem [arrIndex] = MultiboardGetItem(.board, rowLoop, colLoop)
							width   [arrIndex] = .01
							showVal [arrIndex] = true
							showIcon[arrIndex] = true
							curValue[arrIndex] = ""
							curIcon [arrIndex] = ""
							rowLoop = rowLoop + 1
						end
						colLoop = colLoop + 1
					end
				end

				this.colCount = cols
				MultiboardSetColumnCount(.board, this.colCount)
			end
		end

		method setTitleText takes string newTitle returns nothing
			this.titleText = newTitle
			MultiboardSetTitleText(.board, this.titleText)
		end

		// Operator API.

		method title takes nothing returns string
			return this.titleText
		end

		method setTitle takes string newTitle returns nothing
			this.setTitleText(newTitle)
		end

		method columns takes nothing returns int
			return this.colCount
		end

		method setColumns takes int cols returns nothing
			this.setColCount(cols)
		end

		method rows takes nothing returns int
			return this.rowCount
		end

		method setRows takes int cols returns nothing
			this.setRowCount(cols)
		end

		method show takes nothing returns bool
			return this.isShown
		end

		method setShow takes bool doDisplay returns nothing
			this.display(doDisplay)
		end

		method suppress takes nothing returns bool
			return this.isMinimized
		end

		method setSuppress takes bool doMinimize returns nothing
			this.minimize(doMinimize)
		end

		// Initializer.

		static method create takes int cols, int rows, string title returns MyBoard
			MyBoard  board    = new MyBoard
			int  colLoop  = 0
			int  rowLoop
			int  arrIndex

			board.board         = CreateMultiboard()
			board.colCount      = cols
			board.rowCount      = rows
			board.isMinimized   = false
			board.isShown       = false
			board.titleText     = title

			MultiboardSetColumnCount(board.board, cols)
			MultiboardSetRowCount(board.board, rows)
			MultiboardSetTitleText(board.board, title)

			// Pre-initializing board items.
			// This is needed to drastically reduce function calls afterwards.
			loop
				exitwhen colLoop > cols
				rowLoop = 0
				loop
					exitwhen rowLoop > rows
					arrIndex = MAX_COLUMN_COUNT*colLoop + rowLoop
					board.brdItem [arrIndex] = MultiboardGetItem(board.board, rowLoop, colLoop)
					board.width   [arrIndex] = .01
					board.charCnt [arrIndex] = 4
					board.showVal [arrIndex] = true
					board.showIcon[arrIndex] = true
					board.curValue[arrIndex] = ""
					board.curIcon [arrIndex] = ""
					rowLoop = rowLoop + 1
				end
				colLoop++
			end

			return board
		end
	end
