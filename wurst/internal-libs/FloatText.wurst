// Thanks to Cohadar for a good reference for TextTag values.
package FloatText
	public class FloatText
		static constant KERNING          =  5.5
		static constant VERTICAL_KERNING = 48.
		static constant DEFAULT_SHIFT    = 16.

		// The text size, as defined in GoldBounty by Cohadar (divide by .0023
		// to revert the "smart" adjustment done in Wurst STL)
		static constant TEXT_SIZE        = .024 / .0023

		static function themedTag(real x, real y, string s) returns texttag
			let t = CreateTextTag()

			t..setPos(x, y, 0.)
			 ..setText(s, TEXT_SIZE)

			return t


		static function themedTemporaryTag(real x, real y, string s) returns texttag
			let t = themedTag(x, y, s)

			t..setFadepoint(2.)
			 ..setLifespan(3.)
			 ..setPermanent(false)
			 ..setVelocity(0., .03)

			return t


		static function themedTemporaryTagPlayer(real x, real y, string s, int pId) returns texttag
			let t = themedTemporaryTag(x, y, s)

			t.setVisibility(localPlayer == players[pId])

			return t


		static function reviveNumbers(vec2 pos, string s, int pId) returns texttag
			let len = StringLength(s)
			return themedTemporaryTagPlayer(pos.x - (.5 * KERNING * len), pos.y, s, pId)


		static function goldBounty(real x, real y, int bounty, int pId) returns texttag
			let t = themedTemporaryTagPlayer(x - DEFAULT_SHIFT, y, "+" + I2S(bounty), pId)

			t..setColor(255, 220, 0, 255)

			return t


		static function tradeExperienceBounty(real x, real y, int bounty, int pId) returns texttag
			let t = themedTemporaryTagPlayer(x - DEFAULT_SHIFT, y, "+" + I2S(bounty), pId)

			t.setColor(220, 0, 255, 255)

			return t
