package Repair
	import ClosureForGroups
	import ClosureTimers
	import Game
	import Players

	constant REPAIR_RADIUS = 400.
	constant CLOCK_PERIOD  =   1. / 30.


	function doHeal(unit u)
		real fracMissing = 1. - (u.getHP() / u.getMaxHP())
		real exponent    = (fracMissing - .5) * 2.

		// Get a rate between 0. and 1.
		real healRate    = 10..pow(exponent) * 2. / 100.

		real delHp       = u.getMaxHP() * healRate * CLOCK_PERIOD
		u.setState(UNIT_STATE_LIFE, u.getHP() + delHp)
	end

	init
		ForGroupCallback west_closure = (unit u) -> begin
			if Players.isWest(u.getOwner().getId())
				doHeal(u)
			end
		end

		ForGroupCallback east_closure = (unit u) -> begin
			if Players.isEast(u.getOwner().getId())
				doHeal(u)
			end
		end

		doPeriodically(CLOCK_PERIOD, (CallbackPeriodic _) -> begin
			forUnitsInRange(vec2(Game.westRepair.getX(), Game.westRepair.getY()), REPAIR_RADIUS, west_closure)

			forUnitsInRange(vec2(Game.eastRepair.getX(), Game.eastRepair.getY()), REPAIR_RADIUS, east_closure)
		end)
	end
