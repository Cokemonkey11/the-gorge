scope Repair initializer i
	import Game
	import Ships
	import SimError
	import RegisterPlayerUnitEvent

	globals
		constant real MAX_DISTANCE = 400.
		constant real REPAIR_TIMEOUT = 30.
		constant real FRAC = 1./2.
		constant string TOO_OFTEN_ERROR = "You can't heal yourself again so soon!"
		constant string MAX_HEALTH_ERROR = "Your ship is already at maximum health!"
		constant string DISTANCE_ERROR = "Your ship is too far away!"
		constant string ALLIANCE_ERROR = "You can't use the opposition's Repair Port!"
		constant string HEAL_MODEL = "Abilities\\Spells\\Human\\HolyBolt\\HolyBoltSpecialArt.mdl"
		real array lastRepair
	endglobals

	function c takes nothing returns nothing
		player p
		unit tU = GetTriggerUnit()
		integer id
		real max
		real life
		if not Game.ended and (tU == Game.westRepair or tU == Game.eastRepair) then
			p = GetTriggerPlayer()
			id = GetPlayerId(p)
			if Game.localPlayer == p then
				SelectUnit(tU, false)
				SelectUnit(Ships.ships[id], true)
			end
			if IsUnitAlly(tU, p) then
				if IsUnitInRange(tU, Ships.ships[id], MAX_DISTANCE) then
					life = GetWidgetLife(Ships.ships[id])
					max = GetUnitState(Ships.ships[id], UNIT_STATE_MAX_LIFE)
					if life<max then
						if Game.seconds - lastRepair[id] > REPAIR_TIMEOUT then
							lastRepair[id] = Game.seconds
							SetWidgetLife(Ships.ships[id], life + (max-life)*FRAC)
							DestroyEffect(AddSpecialEffectTarget(HEAL_MODEL, Ships.ships[id], "origin"))
						else
							simError(p, TOO_OFTEN_ERROR)
						end
					else
						simError(p, MAX_HEALTH_ERROR)
					end
				else
					simError(p, DISTANCE_ERROR)
				end
			else
				simError(p, ALLIANCE_ERROR)
			end
		end
	end

	function i takes nothing returns nothing
		integer index = 0
		loop
			exitwhen index>11
			lastRepair[index] = -1.*REPAIR_TIMEOUT
			index = index+1
		end
		registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SELECTED, function c)
	end
endscope
