package Revive
	import Ai
	import Assets
	import Assists
	import ClosureTimers
	import FloatText
	import Game
	import GameTimer
	import Players
	import Ships
	import RegisterEvents
	import TerrainData

	constant INVULN_FX    = Abilities.divineShieldTarget
	constant REVIVE_MODEL = Abilities.reincarnationTarget
	constant COP          = Buildings.circleOfPower1

	class DeathDat
		unit u
		int timeL
		vec2 teamPos
		int ownerID = -1

	constant CLOCK_PERIOD    =   1.
	constant REVIVE_OFFSET   = 328.
	constant INVULN_DURATION =   6.
	constant REVIVE_DELAY_FLAT      =  15
	constant REVIVE_DELAY_PERMINUTE =   1
	constant FLAT_BOUNTY            = 100
	constant BOUNTY_PER_MINUTE      =   2
	constant COP_ID = 'u003'

	DeathDat array deathDB
	var dbIndex = -1
	let time = CreateTimer()
	var westDeadCount = 0
	var eastDeadCount = 0

	// Circle of power dummies.
	let westDummy = createUnit(Players.playerPassive, COP_ID, TerrainData.SAFE, angle(3. * PI / 2.))
	let eastDummy = createUnit(Players.playerPassive, COP_ID, TerrainData.SAFE, angle(3. * PI / 2.))

	function p()
		DeathDat tempDat
		int index = 0

		while index <= dbIndex
			tempDat = deathDB[index]
			FloatText.reviveNumbers(tempDat.teamPos, I2S(tempDat.timeL), tempDat.ownerID)
			tempDat.timeL--

			if tempDat.timeL < 1 and not Game.ended
				// Revive the ship.
				Ships.ships[tempDat.ownerID].revive(tempDat.teamPos, true)
				Ships.ships[tempDat.ownerID]..aiOnRevive()..setInvulnerable(true)

				// Apply and async-clear the invulnerability status.
				let invuln_u = Ships.ships[tempDat.ownerID]
				let fx = invuln_u.addEffect(INVULN_FX, "origin")
				doAfter(INVULN_DURATION) () ->
					invuln_u.setInvulnerable(false)
					fx.destr()

				AddSpecialEffectTarget(REVIVE_MODEL, Ships.ships[tempDat.ownerID], "origin").destr()
				if localPlayer == players[tempDat.ownerID]
					PanCameraToTimed(tempDat.teamPos.x, tempDat.teamPos.y, 0.)
					ClearSelection()
					SelectUnit(Ships.ships[tempDat.ownerID], true)

				if tempDat.ownerID < 7
					westDeadCount--
					if westDeadCount == 0
						westDummy.setPos(TerrainData.SAFE)

				else
					eastDeadCount--
					if eastDeadCount == 0
						eastDummy.setPos(TerrainData.SAFE)

				destroy tempDat
				deathDB[index] = deathDB[dbIndex]
				dbIndex--
				index--

				if dbIndex == -1
					PauseTimer(time)

			index++


	function getBounty() returns int
		return (FLAT_BOUNTY + BOUNTY_PER_MINUTE * getElapsedGameTime() / 60.).toInt()


	function parseAssists(int pID)
		for index = 2 to 11
			if (getElapsedGameTime() - Assists.assistTimestamps[pID].vals[index]) <= Assists.ASSIST_TIME
				Game.assists[index]++
				Game.scoreboard.setValue(3, Game.scoreboardRows[index], I2S(Game.assists[index]))


	function c()
		let tU = GetTriggerUnit()

		if Ships.isPlayerShip(tU)
			let kU = GetKillingUnit()
			let kO = GetOwningPlayer(kU)
			let killerId = GetPlayerId(kO)
			let tempDat = new DeathDat
			tempDat.u = tU
			tempDat.timeL = (REVIVE_DELAY_FLAT + REVIVE_DELAY_PERMINUTE * getElapsedGameTime() / 60.).toInt()
			tempDat.ownerID = GetPlayerId(GetOwningPlayer(tU))

			if killerId > 1 and (
				kU.isEnemyOf(tU.getOwner()) or
				killerId == tempDat.ownerID
			)
				parseAssists(tempDat.ownerID)

				if killerId == tempDat.ownerID
					// Player suicide occurred.
					if localPlayer == players[killerId]
						// Message for suicide player.
						DisplayTimedTextToPlayer(
							localPlayer,
							0.,
							0.,
							10.,
							"You destroyed yourself!"
						)

					else
						// Message for other players.
						DisplayTimedTextToPlayer(
							localPlayer,
							0.,
							0.,
							10.,
							Game.colors[tempDat.ownerID] +
								Game.names[tempDat.ownerID] +
								"|r destroyed themself!"
						)

				else
					// PVP kill occurred.
					Game.parseKill(killerId)
					let bounty = getBounty()
					kO.addGold(bounty)

					// Message for killed player.
					DisplayTimedTextToPlayer(
						players[tempDat.ownerID],
						0.,
						0.,
						10.,
						"Your ship was destroyed by " +
							Game.colors[killerId] +
							Game.names[killerId] +
							"|r; you will be rebuilt in " +
							I2S(tempDat.timeL) +
							"|r seconds."
					)

					// Message for killing player.
					DisplayTimedTextToPlayer(
						players[killerId],
						0.,
						0.,
						10.,
						"You destroyed " +
							Game.colors[tempDat.ownerID] +
							Game.names[tempDat.ownerID] +
							"|r for |cffffcc00" +
							I2S(bounty) +
							" gold."
					)

					if not (
						localPlayer == players[tempDat.ownerID] or
						localPlayer == players[killerId
					])
						// Message for other players.
						DisplayTimedTextToPlayer(
							localPlayer,
							0.,
							0.,
							10.,
							Game.colors[tempDat.ownerID] +
								Game.names[tempDat.ownerID] +
								"|r was destroyed by " +
								Game.colors[killerId] +
								Game.names[killerId] +
								"|r for |cffffcc00" +
								I2S(bounty) +
								"|r gold."
						)

			else if not kU.isEnemyOf(tU.getOwner())
				// Something weird occurred - let's display what we know, for
				// posterity.

				// Message for killed player.
				DisplayTimedTextToPlayer(
					players[tempDat.ownerID],
					0.,
					0.,
					10.,
					"Your ship was destroyed by an ALLY " +
						Game.colors[killerId] +
						Game.names[killerId] +
						"|r; you will be rebuilt in " +
						I2S(tempDat.timeL) +
						"|r seconds.  How did this happen?"
				)

				// Message for killing player.
				DisplayTimedTextToPlayer(
					players[killerId],
					0.,
					0.,
					10.,
					"You destroyed an ALLY " +
						Game.colors[tempDat.ownerID] +
						Game.names[tempDat.ownerID] +
						"|r.  How did this happen?"
				)

				if not (
					localPlayer == players[tempDat.ownerID] or
					localPlayer == players[killerId]
				)
					// Message for other players.
					DisplayTimedTextToPlayer(
						localPlayer,
						0.,
						0.,
						10.,
						Game.colors[tempDat.ownerID] +
							Game.names[tempDat.ownerID] +
							"|r was destroyed by an ALLY " +
							Game.colors[killerId] +
							Game.names[killerId] +
							"|r.  How did this happen?"
					)
			else
				if localPlayer == players[tempDat.ownerID]
					// Message for killed player.
					DisplayTimedTextToPlayer(
						localPlayer,
						0.,
						0.,
						10.,
						"Your ship was destroyed. It will be rebuilt in |cffffcc00" +
							I2S(tempDat.timeL) +
							"|r seconds."
					)

				else
					// Message for other players.
					DisplayTimedTextToPlayer(
						localPlayer,
						0.,
						0.,
						10.,
						Game.colors[tempDat.ownerID] +
							Game.names[tempDat.ownerID] +
							"|r was destroyed."
					)


			Game.addDeath(tU)

			if tempDat.ownerID < 7
				tempDat.teamPos = vec2(TerrainData.WESTX + REVIVE_OFFSET, 0.)
				westDeadCount++

				if westDeadCount == 1
					SetUnitX(westDummy, TerrainData.WESTX + REVIVE_OFFSET)
					SetUnitY(westDummy, 0.)

			else
				tempDat.teamPos = vec2(TerrainData.EASTX - REVIVE_OFFSET, 0.)
				eastDeadCount++

				if eastDeadCount == 1
					SetUnitX(eastDummy, TerrainData.EASTX - REVIVE_OFFSET)
					SetUnitY(eastDummy, 0.)

			dbIndex++
			deathDB[dbIndex] = tempDat
			if dbIndex == 0
				TimerStart(time, CLOCK_PERIOD, true, function p)

	init
		registerPlayerUnitEvent(EVENT_PLAYER_UNIT_DEATH, function c)
