package Repair
	import Assets
	import ClosureTimers
	import Game
	import Players
	// import Profile

	constant REPAIR_RADIUS = 400.
	constant PERIOD = 1. / 10.
	constant PERIOD_INV = (1. / PERIOD).toInt()


	function doHeal(unit u, bool do_text)
		let fracMissing = 1. - (u.getHP() / u.getMaxHP())
		let exponent    = (fracMissing - .5) * 2.

		// Get a rate between 0. and 1.
		let healRate    = 10..pow(exponent) * 2. / 100.

		let delHp       = (10. + u.getMaxHP() * healRate) * PERIOD

		if do_text and fracMissing > 0.01
			u.addEffect(Objects.impaleTargetDust, "origin").destr()
			createTTEx(
				u.getPos3with(100.),
				vec2(0., .05),
				"+" + (delHp / PERIOD).toInt().toString(),
				11.,
				1.,
				colorA(155, 255, 155, 255),
				u.getOwner()
			)

		u.addHP(delHp)

	constant grp = CreateGroup()
	init
		doPeriodicallyCounted(PERIOD, 9000000, (CallbackCounted c) -> begin
			// profile()

			grp.enumUnitsInRange(Game.westRepair.getPos(), REPAIR_RADIUS)
			for u from grp
				if Players.isWest(u.getOwner().getId()) and u.isAlive()
					doHeal(u, c.getCount() % PERIOD_INV == 0)

			grp.enumUnitsInRange(Game.eastRepair.getPos(), REPAIR_RADIUS)
			for u from grp
				if Players.isEast(u.getOwner().getId()) and u.isAlive()
					doHeal(u, c.getCount() % PERIOD_INV == 0)
		end)
