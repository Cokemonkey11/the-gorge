scope ChangeShip initializer i
	import Ships
	import Game
	import Players
	import Equipment
	import SimError
	import RegisterPlayerUnitEvent

	globals
		constant string ERROR_MESSAGE   = "You cannot purchase ships from your opponent."
		constant string SAME_SHIP_ERROR = "You cannot purchase the same ship you already own."
		constant string FOOD_ERROR      = "You emply more crew members than that ship can accommodate."

		int array tempIds
	end

	function c takes nothing returns nothing
		unit selU = GetSellingUnit()
		unit bU= GetBuyingUnit()
		unit sU= GetSoldUnit()
		player buyer = GetOwningPlayer(sU)
		int class = Ships.getClass(sU)
		int id
		int val
		int index= 0

		if class!= Ships.CLASS_UNKNOWN then
			if IsUnitAlly(bU, GetOwningPlayer(selU)) then
				if GetUnitTypeId(sU) != GetUnitTypeId(bU) then
					if GetUnitFoodMade(sU) >= GetPlayerState(buyer, PLAYER_STATE_RESOURCE_FOOD_USED) then
						id = GetPlayerId(buyer)
						val = Ships.getSellValue(Ships.ships[id])
						SetPlayerState(buyer, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(buyer, PLAYER_STATE_RESOURCE_GOLD)+val)
						DisplayTextToPlayer(buyer, 0., 0., "You sold your |cffffcc00"+GetUnitName(bU)+"|r for |cffffcc00"+I2S(val)+"|r gold and acquired a |cffffcc00"+GetUnitName(sU)+"|r.")
						Game.shipClass[id] = GetUnitTypeId(sU)
						Game.updateIcon(id)
						SetUnitX(sU, GetUnitX(Ships.ships[id]))
						SetUnitY(sU, GetUnitY(Ships.ships[id]))
						loop
							exitwhen index>5
							tempIds[index] = GetItemTypeId(UnitItemInSlot(bU, index))
							index= index+1
						end
						RemoveUnit(Ships.ships[id])
						Ships.ships[id] = sU
						Equipment.playerAddItemsFromIdConditional(id, tempIds[0], tempIds[1], tempIds[2], tempIds[3], tempIds[4], tempIds[5])
						Equipment.resetUnitDamageReduction(Ships.ships[id])
						if Players.localPlayer == buyer then
							SelectUnit(Ships.ships[id], true)
							SelectUnit(selU, false)
						end
					else
						simError(GetOwningPlayer(bU), FOOD_ERROR)
						SetPlayerState(buyer, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(buyer, PLAYER_STATE_RESOURCE_GOLD)+R2I(I2R(Ships.getSellValue(sU))/Ships.SELL_RATIO))
						RemoveUnit(sU)
					end
				else
					simError(GetOwningPlayer(bU), SAME_SHIP_ERROR)
					SetPlayerState(buyer, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(buyer, PLAYER_STATE_RESOURCE_GOLD)+R2I(I2R(Ships.getSellValue(sU))/Ships.SELL_RATIO))
					RemoveUnit(sU)
				end
			else
				simError(GetOwningPlayer(bU), ERROR_MESSAGE)
				SetPlayerState(buyer, PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(buyer, PLAYER_STATE_RESOURCE_GOLD)+R2I(I2R(Ships.getSellValue(sU))/Ships.SELL_RATIO))
				RemoveUnit(sU)
			end
		end
	end

	function i takes nothing returns nothing
		registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SELL, function c)
	end
endscope
