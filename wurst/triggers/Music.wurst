package Music
	import ClosureTimers
	import Muscii

	// Back Against the Wall by Cage the Elephant
	// http://tabs.ultimate-guitar.com/c/cage_the_elephant/back_against_the_wall_ver2_drum_tab.htm
	constant HAT_PATH       = "musRad-khatClosed.mp3"
	constant HATOPEN_PATH   = "musRad-khatOpen.mp3"
	constant SNR_PATH       = "musRad-sonorSnr.mp3"
	constant BAS_PATH       = "musRad-bass.mp3"
	constant RID_PATH       = "zildj-ride.mp3"
	constant FLM_PATH       = "musRad-sonorFlam.mp3"
	constant RIM_PATH       = "musRad-sonorRim.mp3"
	constant CRS_PATH       = "zildj-crash.mp3"
	constant TM1_PATH       = "musRad-tom1.mp3"
	constant TM1DOUBLE_PATH = "musRad-tom1-double.mp3"
	constant TM4_PATH       = "musRad-tom4.mp3"
	constant TM5DOUBLE_PATH = "musRad-tom5-double.mp3"
	constant TM5_PATH       = "musRad-tom5.mp3"
	constant HATPDL_PATH    = "musRad-khatPdl.mp3"

	Muscii m
	Muscii v1
	Muscii v1p2
	Muscii v1p3
	Muscii chorusP1
	Muscii chorusP2
	Muscii chorusP3
	Muscii chorus2P4
	Muscii chorus2P5
	Muscii chorus2P7
	Muscii chorus2P8
	Muscii verse3P2
	Muscii chorus3P7
	Muscii chorus3P8


	function playIntro()
		m
			..playCounted(3)
			..callback(() -> playVerse1())


	function playVerse1()
		v1
			..playCounted(0)
			..enqueue(v1p2, 1)
			..enqueue(v1p3, 0)
			..callback(() -> playChorus())


	function playChorus()
		chorusP1
			..playCounted(0)
			..enqueue(chorusP2, 0)
			..enqueue(chorusP3, 0)
			..enqueue(chorusP2, 0)
			..callback(() -> playVerse2())


	function playVerse2()
		v1
			..playCounted(0)
			..enqueue(v1p2, 1)
			..enqueue(v1p3, 0)
			..callback(() -> playChorus2())


	function playChorus2()
		chorusP1
			..playCounted(0)
			..enqueue(chorusP3, 1)
			..enqueue(chorus2P4, 0)
			..enqueue(chorus2P5, 1)
			..enqueue(chorus2P7, 0)
			..enqueue(chorus2P8, 0)
			..callback(() -> playVerse3())


	function playVerse3()
		v1
			..playCounted(0)
			..enqueue(verse3P2, 0)
			..enqueue(v1p2, 2)
			..enqueue(v1p3, 0)
			..callback(() -> playChorus3())


	function playChorus3()
		chorusP1
			..playCounted(0)
			..enqueue(chorusP3, 0)
			..enqueue(chorusP3, 0)
			..enqueue(chorus2P4, 0)
			..enqueue(chorus2P5, 1)
			..enqueue(chorus3P7, 0)
			..enqueue(chorus3P8, 0)
			..callback(() -> playVerse1())


	init
		let hat       = new Note(HAT_PATH,        90, 1.)
		let snr       = new Note(SNR_PATH,       110, 1.)
		let bas       = new Note(BAS_PATH,       127, 1.)
		let hatQuiet  = new Note(HAT_PATH,        75, 1.)
		let snrQuiet  = new Note(SNR_PATH,        97, 1.)
		let basQuiet  = new Note(BAS_PATH,       105, 1.)
		let hatVQuiet = new Note(HAT_PATH,        60, 1.)
		let snrVQuiet = new Note(SNR_PATH,        83, 1.)
		let basVQuiet = new Note(BAS_PATH,        89, 1.)
		let rid       = new Note(RID_PATH,        75, 1.)
		let flm       = new Note(FLM_PATH,       110, 1.)
		let rim       = new Note(RIM_PATH,       100, 1.)
		let crs       = new Note(CRS_PATH,        55, 1.)
		let hop       = new Note(HATOPEN_PATH,    90, 1.)
		let tm1       = new Note(TM1_PATH,       110, 1.)
		let tm1d      = new Note(TM1DOUBLE_PATH, 110, 1.)
		let tm4       = new Note(TM4_PATH,       110, 1.)
		let tm5       = new Note(TM5_PATH,       110, 1.)
		//let tm5d    = new Note(TM5DOUBLE_PATH, 110, 1.)
		let hft       = new Note(HATPDL_PATH,     75, 1.)

		m = Muscii.fromTracks(
			new Track(rid, "x-x-x-x-x-x-x-x-"),
			new Track(bas, "o---------------")
		)

		v1 = Muscii.fromTracks(
			new Track(rid, "x-x-x-x-x-x-x-x-"),
			new Track(rim, "--x---x---x---x-"),
			new Track(bas, "o---------------")
		)

		v1p2 = Muscii.fromTracks(
			new Track(rid, "x-x-x-x-x-x-x-x-"),
			new Track(rim, "--x---x---x---x-"),
			new Track(bas, "o--------------o")
		)

		v1p3 = Muscii.fromTracks(
			new Track(rid, "x-x-x-x-x-x-x---"),
			new Track(rim, "--x---x---x-----"),
			new Track(flm, "--------------o-"),
			new Track(bas, "o------------o-o")
		)

		chorusP1 = Muscii.fromTracks(
			new Track(crs, "x---------------"),
			new Track(hat, "--x-x-x-x-x-x-x-"),
			new Track(hop, "-------x-------x"),
			new Track(snr, "--o--o----o--o--"),
			new Track(bas, "oo-oo----o-oo---")
		)

		chorusP2 = Muscii.fromTracks(
			new Track(hat,  "x-x-x-x-x-x-x---"),
			new Track(hop,  "-------x--------"),
			new Track(snr,  "--o--o----o--o--"),
			new Track(tm1d, "--------------o-"),
			new Track(tm4,  "---------------o"),
			new Track(bas,  "oo-oo---oo-oo---")
		)

		chorusP3 = Muscii.fromTracks(
			new Track(hat, "x-x-x-x-x-x-x-x-"),
			new Track(hop, "-------x-------x"),
			new Track(snr, "--o--o----o--o--"),
			new Track(bas, "oo-oo---oo-oo---")
		)

		chorus2P4 = Muscii.fromTracks(
			new Track(hatVQuiet, "qqqq------------"),
			new Track(snrVQuiet, "qqqq------------"),
			new Track(basVQuiet, "qqqq------------"),
			new Track(hatQuiet,  "----mmmm--------"),
			new Track(snrQuiet,  "----mmmm--------"),
			new Track(basQuiet,  "----mmmm--------"),
			new Track(crs,       "-------------x-x"),
			new Track(hat,       "--------xxx-----"),
			new Track(snr,       "--------ooo--o-o"),
			new Track(flm,       "-----------xx-x-"),
			new Track(bas,       "--------ooo-----")
		)

		chorus2P5 = Muscii.fromTracks(
			new Track(crs, "x---------------"),
			new Track(hat, "--x-x-x-x-x-x-x-"),
			new Track(snr, "--o---o---o---o-"),
			new Track(bas, "o--oo--o-o-ooo-o")
		)

		chorus2P7 = Muscii.fromTracks(
			new Track(crs, "x-------------x-"),
			new Track(hat, "--x-x-x-x-x-x---"),
			new Track(snr, "--o---o---o---o-"),
			new Track(bas, "o--oo--o-o-ooo-o")
		)

		chorus2P8 = Muscii.fromTracks(
			new Track(crs, "x---------------"),
			new Track(hat, "--x-x-x-x-x-x---"),
			new Track(snr, "--o---o---o--o--"),
			new Track(tm1, "--------------o-"),
			new Track(tm5, "---------------o"),
			new Track(bas, "o--oo--o-o-oo---")
		)

		verse3P2 = Muscii.fromTracks(
			new Track(rid, "x-x-x-x-x-x-x-x-"),
			new Track(hft, "---------------x"),
			new Track(rim, "--o---o---o---o-"),
			new Track(bas, "o---------------")
		)

		chorus3P7 = Muscii.fromTracks(
			new Track(crs, "x---------------"),
			new Track(hat, "--x-x-x-x-x-x-x-"),
			new Track(snr, "--o---o---o---o-"),
			new Track(bas, "o--oo--o-o-ooo-o")
		)

		chorus3P8 = Muscii.fromTracks(
			new Track(crs, "x---------------"),
			new Track(hat, "--x-x-x-x-x-x-x-"),
			new Track(snr, "--o---o---o---o-"),
			new Track(bas, "o--oo--o-o-ooo-o")
		)

		doAfter(5.) ->
			playIntro()
