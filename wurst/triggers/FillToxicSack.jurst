scope FillToxicSack initializer i
	import Equipment
	import Game
	import Terrain

	globals
		constant real MIN_X = 722.
		constant real MIN_Y = 2865.
		constant real MAX_X = 1017.
		constant real MAX_Y = 3174.

		constant string SUCCESS_MESSAGE = "You filled your container with |cffffcc00Toxic Waste|r; return to your Utility Port for a reward."
		constant integer GOLD = 30
		constant integer TRADE = 1
	endglobals

	function f takes nothing returns boolean
		unit fU = GetFilterUnit()
		integer slt = Equipment.unitHasItemOfTypeSlot(fU, Equipment.TOXIC_SUBST)
		player owner = GetOwningPlayer(fU)
		if slt>-1 then
			RemoveItem(UnitItemInSlot(fU, slt))
			UnitAddItem(fU, CreateItem(Equipment.TOXIC_SUBST_FULL, GetUnitX(fU), GetUnitY(fU)))
			DisplayTextToPlayer(owner, 0., 0., SUCCESS_MESSAGE)
			Sound.playForPlayer(Game.TRADE_SUCCESS_SOUND, 1., owner)
		end
		return false
	end

	function f2 takes nothing returns boolean
		unit fU = GetFilterUnit()
		integer id = GetPlayerId(GetOwningPlayer(fU))
		integer slt = Equipment.unitHasItemOfTypeSlot(fU, Equipment.TOXIC_SUBST_FULL)
		if slt>-1 then
			if id<7 then
				if Game.playerIsWest(id) then
					RemoveItem(UnitItemInSlot(fU, slt))
					UnitAddItem(fU, CreateItem(Equipment.TOXIC_SUBST, GetUnitX(fU), GetUnitY(fU)))
					Game.reward(fU, GOLD, TRADE)
				end
			else
				if not Game.playerIsWest(id) then
					RemoveItem(UnitItemInSlot(fU, slt))
					UnitAddItem(fU, CreateItem(Equipment.TOXIC_SUBST, GetUnitX(fU), GetUnitY(fU)))
					Game.reward(fU, GOLD, TRADE)
				end
			end
		end
		return false
	end

	function i takes nothing returns nothing

		// Initialize triggers for shop and utility ports
		trigger shopTrigger= CreateTrigger()
		trigger utilityTrigger = CreateTrigger()

		// Initialize rect near shop
		rect shopRect = Rect(MIN_X, MIN_Y, MAX_X, MAX_Y)

		// Create regions which spasely define the trigger spots (near shop, near utilities)
		region reg = CreateRegion()
		region reg2 = CreateRegion()
		RegionAddRect(reg, shopRect)
		RegionAddRect(reg2, Terrain.utilityWest)
		RegionAddRect(reg2, Terrain.utilityEast)

		// Register triggers
		TriggerRegisterEnterRegion(utilityTrigger, reg2, Filter(function f2))
		TriggerRegisterEnterRegion(shopTrigger, reg, Filter(function f))

		// Cleanup
		RemoveRect(shopRect)
	end
endscope
